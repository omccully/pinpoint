<style>
html, body, .container-fluid, .row, .col-md-9, #map {
  height:100%;
}

#map {
  width:100%;
  position:relative;
}
</style>
<audio id="alarm_sound" src="/sound/alarm.mp3" preload="auto"></audio>
<div class="container-fluid">
  <div class="row">
    <div class="col-md-3">
      <h4>Pinpoint Devices</h4>
      <% @all_device_info.each do |id_code, info| %>
        <div class="btn-group">
          <button type="button" class="btn btn-default" onclick="center_on_id('<%= id_code %>')">
            <%= info[:name] %>
          </button>

          <button type="button" class="btn btn-default" onclick="show_info(<%= id_code %>)">
            <span class="glyphicon glyphicon-info-sign"></span>
          </button>

          <button type="button" class="btn btn-default" id="alert_button_<%= id_code %>"
            onclick="ack_alert('<%= id_code %>')">
            <span class="glyphicon glyphicon-alert"></span>
          </button>
        </div>
        <br/>
      <% end %>
      <br/>
      <p id='lastupdated'>
        Position last updated:
        <%= @last_loc.created_at %>
        (<%= ((Time.now - @last_loc.created_at) / 60).round(0) %> minutes ago)
      </p>
      <br/>
      <%= link_to "About the project", about_path %>
    </div>
    <div class="col-md-9">
      <div id="map"></div>
    </div>
    <script>
    // ignore alerts made before page has loaded
    page_load_time = <%= Time.now.to_i %>;

    $(".btn").mouseup(function(){
          $(this).blur();
    });
  
    markers = {}
    locations = {}
    map = null;
    function initialize_map() {
      var initial_data = <%= @all_device_info.to_json.html_safe %>
      var start_coords = {lat: <%= @last_loc.latitude %>,
        lng: <%= @last_loc.longitude %>};
      map = new google.maps.Map(document.getElementById('map'), {
        zoom: 10,
        center: start_coords,
        mapTypeId: google.maps.MapTypeId.HYBRID
      });
      add_markers(initial_data);

      // TODO: instead of polling, keep connection open 
      // and have server send data when new data comes in
      window.setInterval(function() {
        $.get('/location/json', function(data, status) {
          add_markers(data);
        }, "json");
      }, 2000);
    }

    // sets the position of a marker that already exists
    function set_marker(marker, latitude, longitude) {
      marker.setPosition(new google.maps.LatLng(latitude, longitude));
    }

    // add markers or change position of markers on the map
    // based on the JSON data
    function add_markers(data) {
      locations = data;
      for(var id_code in locations) {
        if(locations.hasOwnProperty(id_code)) {
          coords = locations[id_code];
          if(markers.hasOwnProperty(id_code)) {
            // marker already exists in the markers object
            set_marker(markers[id_code], coords.latitude,
                coords.longitude);
          } else {
            // marker must be created
            markers[id_code] = new google.maps.Marker({
              position: { lat: coords.latitude, 
                          lng: coords.longitude },
              map: map,
              label: { 
                text: coords.name,
                fontWeight: 'bold'
              }
            });
          }
        }
      }
    }

    function center_on_id(id_code) {
      if(locations.hasOwnProperty(id_code)) {
        var coords = locations[id_code];
        map.setCenter(new google.maps.LatLng(coords.latitude, coords.longitude));
      }
    }

    function ack_alert(id) {
      acked_alert_times[id] = locations[id]["last_panic_time"]; 
      $("#alert_button_" + id).removeClass("btn-danger").addClass("btn-default");
    }

    // alert system
    // will be modified later
    acked_alert_times = []; 
    alerted_ids = [];
    window.setInterval(function() {
      var alerting = false;
      for(var id in locations) {
        // alert(id);
        /* if(locations.hasOwnProperty(id)) {
          alert(locations[id]["last_panic_time"] + " > " +  page_load_time);
        k} */
        if(locations.hasOwnProperty(id) && 
            locations[id]["last_panic_time"] > page_load_time) {
          if(!acked_alert_times.hasOwnProperty(id) || 
              acked_alert_times[id] < locations[id]["last_panic_time"]) {
            alerting = true

            // blink the alert button
            $("#alert_button_" + id).toggleClass("btn-danger").toggleClass("btn-default");
          } 
        }
      }
      var alarm = $("#alarm_sound")[0];
      if(alerting) {
        if(alarm.paused) {
          alarm.play();
        }
      } else {
        if(!alarm.paused) {
          alarm.pause();
          alarm.currentTime = 0;
        }
      }
    }, 350);

    var ts_offset = <%= Time.now.to_i %> - (+ new Date());

    function time_ago_str(server_time) {
      var js_time_adjusted = (+ new Date()) + ts_offset;
      var time_dif = (js_time_adjusted - server_time);
      return time_dif + " seconds ago (" +
        (time_dif / 3600).toFixed(1) + " hours ago)";
    }

    function speed_str(mps) {
      if(mps == null) mps = 0;
      return mps + " m/s (" + (mps * 2.23694) + " mi/hr)";
    }

    function show_info(id) {
      // alert(JSON.stringify(locations[id]));
      var dev = locations[id];
      var ret = "";
      ret += "Latitude: " + dev["latitude"].toFixed(6) + "\n";
      ret += "Longitude: " + dev["longitude"].toFixed(6) + "\n";

      ret += "Last online: " + time_ago_str(dev["time"]) + "\n";
      ret += "Last panic signal: " + time_ago_str(dev["last_panic_time"]) + "\n";

      var velocities = locations[id]['velocities'];

      ret += "1 minute average: " + speed_str(velocities[60]) + "\n";
      ret += "5 minute average: " + speed_str(velocities[300]) + "\n";
      ret += "1 hour average: " + speed_str(velocities[3600]) + "\n";
      alert(ret);
    }

/* 
    function alert_by_id(id_code) {
      var index = alerted_ids.indexOf(id_code);
      if(index > -1) { // device sent an unhandled alert
        alerted_ids.splice(index, 1);
        $("#alert_button_" + id_code).removeClass("btn-danger").addClass("btn-default");
      } else { // device hasn't sent an alert
        alerted_ids.push(id_code);
      }
      } 
      */
    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAqO2ai1uwdMDcxrg4Foc3_OfQKghsIqk4&callback=initialize_map">
    </script>
  </div>
</div>
